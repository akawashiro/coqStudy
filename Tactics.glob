DIGEST 08334d75fbf18d998aa78d790defe2f8
FTactics
R612:615 Poly <> <> lib
prf 891:896 <> silly1
R918:920 Coq.Init.Datatypes <> nat ind
R934:943 Coq.Init.Logic <> :type_scope:x_'->'_x not
R957:965 Coq.Init.Logic <> :type_scope:x_'->'_x not
R971:973 Coq.Init.Logic <> :type_scope:x_'='_x not
R966:966 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R968:968 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R970:970 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R969:969 Tactics <> o var
R967:967 Tactics <> n var
R974:974 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R976:976 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R978:978 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R977:977 Tactics <> p var
R975:975 Tactics <> m var
R949:951 Coq.Init.Logic <> :type_scope:x_'='_x not
R944:944 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R946:946 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R948:948 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R947:947 Tactics <> o var
R945:945 Tactics <> n var
R952:952 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R954:954 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R956:956 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R955:955 Tactics <> p var
R953:953 Tactics <> n var
R930:932 Coq.Init.Logic <> :type_scope:x_'='_x not
R929:929 Tactics <> n var
R933:933 Tactics <> m var
prf 1502:1507 <> silly2
R1529:1531 Coq.Init.Datatypes <> nat ind
R1545:1554 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1555:1555 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1598:1607 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1613:1615 Coq.Init.Logic <> :type_scope:x_'='_x not
R1608:1608 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1610:1610 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1612:1612 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1611:1611 Tactics <> o var
R1609:1609 Tactics <> n var
R1616:1616 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1618:1618 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1620:1620 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1619:1619 Tactics <> p var
R1617:1617 Tactics <> m var
R1570:1572 Coq.Init.Datatypes <> nat ind
R1581:1584 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1590:1592 Coq.Init.Logic <> :type_scope:x_'='_x not
R1585:1585 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1587:1587 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1589:1589 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1588:1588 Tactics <> o var
R1586:1586 Tactics <> q var
R1593:1593 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1595:1595 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1597:1597 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1596:1596 Tactics <> p var
R1594:1594 Tactics <> r var
R1577:1579 Coq.Init.Logic <> :type_scope:x_'='_x not
R1576:1576 Tactics <> q var
R1580:1580 Tactics <> r var
R1541:1543 Coq.Init.Logic <> :type_scope:x_'='_x not
R1540:1540 Tactics <> n var
R1544:1544 Tactics <> m var
prf 2287:2293 <> silly2a
R2311:2313 Coq.Init.Datatypes <> nat ind
R2335:2344 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2345:2345 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2392:2401 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2405:2407 Coq.Init.Logic <> :type_scope:x_'='_x not
R2402:2402 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2404:2404 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2403:2403 Tactics <> n var
R2408:2408 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2410:2410 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2409:2409 Tactics <> m var
R2360:2362 Coq.Init.Datatypes <> nat ind
R2379:2382 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2386:2388 Coq.Init.Logic <> :type_scope:x_'='_x not
R2383:2383 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2385:2385 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2384:2384 Tactics <> q var
R2389:2389 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2391:2391 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2390:2390 Tactics <> r var
R2371:2373 Coq.Init.Logic <> :type_scope:x_'='_x not
R2366:2366 Poly <> ::'('_x_','_x_')' not
R2368:2368 Poly <> ::'('_x_','_x_')' not
R2370:2370 Poly <> ::'('_x_','_x_')' not
R2367:2367 Tactics <> q var
R2369:2369 Tactics <> q var
R2374:2374 Poly <> ::'('_x_','_x_')' not
R2376:2376 Poly <> ::'('_x_','_x_')' not
R2378:2378 Poly <> ::'('_x_','_x_')' not
R2375:2375 Tactics <> r var
R2377:2377 Tactics <> r var
R2327:2329 Coq.Init.Logic <> :type_scope:x_'='_x not
R2322:2322 Poly <> ::'('_x_','_x_')' not
R2324:2324 Poly <> ::'('_x_','_x_')' not
R2326:2326 Poly <> ::'('_x_','_x_')' not
R2323:2323 Tactics <> n var
R2325:2325 Tactics <> n var
R2330:2330 Poly <> ::'('_x_','_x_')' not
R2332:2332 Poly <> ::'('_x_','_x_')' not
R2334:2334 Poly <> ::'('_x_','_x_')' not
R2331:2331 Tactics <> m var
R2333:2333 Tactics <> m var
prf 2593:2600 <> silly_ex
R2609:2609 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2655:2664 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2679:2687 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2694:2696 Coq.Init.Logic <> :type_scope:x_'='_x not
R2688:2691 Basics <> oddb def
R2697:2700 Basics <> true constr
R2672:2674 Coq.Init.Logic <> :type_scope:x_'='_x not
R2665:2669 Basics <> evenb def
R2675:2678 Basics <> true constr
R2634:2637 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2648:2650 Coq.Init.Logic <> :type_scope:x_'='_x not
R2638:2641 Basics <> oddb def
R2644:2644 Coq.Init.Datatypes <> S constr
R2646:2646 Tactics <> n var
R2651:2654 Basics <> true constr
R2627:2629 Coq.Init.Logic <> :type_scope:x_'='_x not
R2620:2624 Basics <> evenb def
R2626:2626 Tactics <> n var
R2630:2633 Basics <> true constr
prf 2973:2987 <> silly3_firsttry
R3003:3005 Coq.Init.Datatypes <> nat ind
R3032:3041 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3061:3063 Coq.Init.Logic <> :type_scope:x_'='_x not
R3042:3048 Basics <> beq_nat def
R3051:3051 Coq.Init.Datatypes <> S constr
R3054:3054 Coq.Init.Datatypes <> S constr
R3056:3056 Tactics <> n var
R3064:3067 Basics <> true constr
R3018:3020 Coq.Init.Logic <> :type_scope:x_'='_x not
R3014:3017 Basics <> true constr
R3021:3027 Basics <> beq_nat def
R3029:3029 Tactics <> n var
prf 3616:3628 <> rev_exercise1
R3647:3650 Poly <> list ind
R3652:3654 Coq.Init.Datatypes <> nat ind
R3673:3681 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3684:3686 Coq.Init.Logic <> :type_scope:x_'='_x not
R3682:3683 Tactics <> l' var
R3687:3689 Poly <> rev def
R3691:3691 Tactics <> l var
R3664:3666 Coq.Init.Logic <> :type_scope:x_'='_x not
R3663:3663 Tactics <> l var
R3667:3669 Poly <> rev def
R3671:3672 Tactics <> l' var
def 4202:4217 <> trans_eq_example
R4243:4245 Coq.Init.Datatypes <> nat ind
R4267:4275 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4289:4297 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4303:4305 Coq.Init.Logic <> :type_scope:x_'='_x not
R4298:4298 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4300:4300 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4302:4302 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4301:4301 Tactics <> b var
R4299:4299 Tactics <> a var
R4306:4306 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4308:4308 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4310:4310 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4309:4309 Tactics <> f var
R4307:4307 Tactics <> e var
R4281:4283 Coq.Init.Logic <> :type_scope:x_'='_x not
R4276:4276 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4278:4278 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4280:4280 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4279:4279 Tactics <> d var
R4277:4277 Tactics <> c var
R4284:4284 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4286:4286 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4288:4288 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4287:4287 Tactics <> f var
R4285:4285 Tactics <> e var
R4259:4261 Coq.Init.Logic <> :type_scope:x_'='_x not
R4254:4254 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4256:4256 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4258:4258 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4257:4257 Tactics <> b var
R4255:4255 Tactics <> a var
R4262:4262 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4264:4264 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4266:4266 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4265:4265 Tactics <> d var
R4263:4263 Tactics <> c var
prf 4567:4574 <> trans_eq
R4603:4603 Tactics <> X var
R4614:4617 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4623:4626 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4628:4630 Coq.Init.Logic <> :type_scope:x_'='_x not
R4627:4627 Tactics <> n var
R4631:4631 Tactics <> o var
R4619:4621 Coq.Init.Logic <> :type_scope:x_'='_x not
R4618:4618 Tactics <> m var
R4622:4622 Tactics <> o var
R4610:4612 Coq.Init.Logic <> :type_scope:x_'='_x not
R4609:4609 Tactics <> n var
R4613:4613 Tactics <> m var
def 4886:4902 <> trans_eq_example'
R4928:4930 Coq.Init.Datatypes <> nat ind
R4952:4960 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4974:4982 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4988:4990 Coq.Init.Logic <> :type_scope:x_'='_x not
R4983:4983 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4985:4985 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4987:4987 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4986:4986 Tactics <> b var
R4984:4984 Tactics <> a var
R4991:4991 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4993:4993 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4995:4995 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4994:4994 Tactics <> f var
R4992:4992 Tactics <> e var
R4966:4968 Coq.Init.Logic <> :type_scope:x_'='_x not
R4961:4961 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4963:4963 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4965:4965 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4964:4964 Tactics <> d var
R4962:4962 Tactics <> c var
R4969:4969 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4971:4971 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4973:4973 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4972:4972 Tactics <> f var
R4970:4970 Tactics <> e var
R4944:4946 Coq.Init.Logic <> :type_scope:x_'='_x not
R4939:4939 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4941:4941 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4943:4943 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4942:4942 Tactics <> b var
R4940:4940 Tactics <> a var
R4947:4947 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4949:4949 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4951:4951 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4950:4950 Tactics <> d var
R4948:4948 Tactics <> c var
R5466:5466 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5468:5468 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5470:5470 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5448:5455 Tactics <> trans_eq thm
R5466:5466 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5468:5468 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5470:5470 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5448:5455 Tactics <> trans_eq thm
def 5802:5818 <> trans_eq_exercise
R5840:5842 Coq.Init.Datatypes <> nat ind
R5867:5875 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5887:5895 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5896:5896 Coq.Init.Logic <> :type_scope:x_'='_x not
R5902:5906 Coq.Init.Logic <> :type_scope:x_'='_x not
R5917:5917 Coq.Init.Logic <> :type_scope:x_'='_x not
R5898:5900 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5897:5897 Tactics <> n var
R5901:5901 Tactics <> p var
R5907:5914 Basics <> minustwo def
R5916:5916 Tactics <> o var
R5876:5876 Coq.Init.Logic <> :type_scope:x_'='_x not
R5882:5885 Coq.Init.Logic <> :type_scope:x_'='_x not
R5878:5880 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5877:5877 Tactics <> n var
R5881:5881 Tactics <> p var
R5886:5886 Tactics <> m var
R5852:5855 Coq.Init.Logic <> :type_scope:x_'='_x not
R5866:5866 Coq.Init.Logic <> :type_scope:x_'='_x not
R5851:5851 Tactics <> m var
R5856:5863 Basics <> minustwo def
R5865:5865 Tactics <> o var
prf 7462:7472 <> S_injective
R7490:7492 Coq.Init.Datatypes <> nat ind
R7507:7512 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7514:7516 Coq.Init.Logic <> :type_scope:x_'='_x not
R7513:7513 Tactics <> n var
R7517:7517 Tactics <> m var
R7501:7503 Coq.Init.Logic <> :type_scope:x_'='_x not
R7498:7498 Coq.Init.Datatypes <> S constr
R7500:7500 Tactics <> n var
R7504:7504 Coq.Init.Datatypes <> S constr
R7506:7506 Tactics <> m var
prf 8012:8024 <> inversion_ex1
R8044:8046 Coq.Init.Datatypes <> nat ind
R8067:8072 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8076:8078 Coq.Init.Logic <> :type_scope:x_'='_x not
R8073:8073 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8075:8075 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8074:8074 Tactics <> n var
R8079:8079 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8081:8081 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8080:8080 Tactics <> m var
R8058:8060 Coq.Init.Logic <> :type_scope:x_'='_x not
R8052:8052 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8054:8055 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8057:8057 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8056:8056 Tactics <> m var
R8053:8053 Tactics <> n var
R8061:8061 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8063:8064 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8066:8066 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8065:8065 Tactics <> o var
R8062:8062 Tactics <> o var
prf 8239:8251 <> inversion_ex2
R8269:8271 Coq.Init.Datatypes <> nat ind
R8286:8291 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8293:8295 Coq.Init.Logic <> :type_scope:x_'='_x not
R8292:8292 Tactics <> n var
R8296:8296 Tactics <> m var
R8280:8282 Coq.Init.Logic <> :type_scope:x_'='_x not
R8277:8277 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8279:8279 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8278:8278 Tactics <> n var
R8283:8283 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8285:8285 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8284:8284 Tactics <> m var
def 8418:8430 <> inversion_ex3
R8461:8461 Tactics <> X var
R8471:8474 Poly <> list ind
R8476:8476 Tactics <> X var
R8502:8507 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8523:8528 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8530:8532 Coq.Init.Logic <> :type_scope:x_'='_x not
R8529:8529 Tactics <> x var
R8533:8533 Tactics <> y var
R8514:8516 Coq.Init.Logic <> :type_scope:x_'='_x not
R8509:8512 Poly <> ::x_'::'_x not
R8508:8508 Tactics <> y var
R8513:8513 Tactics <> l var
R8518:8521 Poly <> ::x_'::'_x not
R8517:8517 Tactics <> x var
R8522:8522 Tactics <> j var
R8493:8495 Coq.Init.Logic <> :type_scope:x_'='_x not
R8483:8486 Poly <> ::x_'::'_x not
R8482:8482 Tactics <> x var
R8488:8491 Poly <> ::x_'::'_x not
R8487:8487 Tactics <> y var
R8492:8492 Tactics <> l var
R8497:8500 Poly <> ::x_'::'_x not
R8496:8496 Tactics <> z var
R8501:8501 Tactics <> j var
prf 8781:8791 <> beq_nat_0_l
R8826:8829 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8831:8833 Coq.Init.Logic <> :type_scope:x_'='_x not
R8830:8830 Tactics <> n var
R8819:8821 Coq.Init.Logic <> :type_scope:x_'='_x not
R8808:8814 Basics <> beq_nat def
R8818:8818 Tactics <> n var
R8822:8825 Basics <> true constr
prf 9741:9753 <> inversion_ex4
R9769:9771 Coq.Init.Datatypes <> nat ind
R9784:9789 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9795:9797 Coq.Init.Logic <> :type_scope:x_'='_x not
R9791:9793 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R9780:9782 Coq.Init.Logic <> :type_scope:x_'='_x not
R9777:9777 Coq.Init.Datatypes <> S constr
R9779:9779 Tactics <> n var
R9783:9783 Coq.Init.Datatypes <> O constr
prf 9859:9871 <> inversion_ex5
R9889:9891 Coq.Init.Datatypes <> nat ind
R9909:9914 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9918:9920 Coq.Init.Logic <> :type_scope:x_'='_x not
R9915:9915 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9917:9917 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9916:9916 Tactics <> n var
R9921:9921 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9923:9923 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9922:9922 Tactics <> m var
R9902:9904 Coq.Init.Logic <> :type_scope:x_'='_x not
R9897:9901 Basics <> false constr
R9905:9908 Basics <> true constr
def 10435:10447 <> inversion_ex6
R10504:10504 Tactics <> X var
R10514:10517 Poly <> list ind
R10519:10519 Tactics <> X var
R10541:10546 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10562:10567 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10569:10571 Coq.Init.Logic <> :type_scope:x_'='_x not
R10568:10568 Tactics <> x var
R10572:10572 Tactics <> z var
R10553:10555 Coq.Init.Logic <> :type_scope:x_'='_x not
R10548:10551 Poly <> ::x_'::'_x not
R10547:10547 Tactics <> y var
R10552:10552 Tactics <> l var
R10557:10560 Poly <> ::x_'::'_x not
R10556:10556 Tactics <> z var
R10561:10561 Tactics <> j var
R10536:10538 Coq.Init.Logic <> :type_scope:x_'='_x not
R10526:10529 Poly <> ::x_'::'_x not
R10525:10525 Tactics <> x var
R10531:10534 Poly <> ::x_'::'_x not
R10530:10530 Tactics <> y var
R10535:10535 Tactics <> l var
R10539:10540 Poly <> ::'['_']' not
prf 11726:11732 <> f_equal
R11761:11764 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11765:11765 Tactics <> B var
R11760:11760 Tactics <> A var
R11774:11774 Tactics <> A var
R11785:11788 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11792:11794 Coq.Init.Logic <> :type_scope:x_'='_x not
R11789:11789 Tactics <> f var
R11791:11791 Tactics <> x var
R11795:11795 Tactics <> f var
R11797:11797 Tactics <> y var
R11781:11783 Coq.Init.Logic <> :type_scope:x_'='_x not
R11780:11780 Tactics <> x var
R11784:11784 Tactics <> y var
prf 12300:12304 <> S_inj
R12322:12324 Coq.Init.Datatypes <> nat ind
R12332:12335 Basics <> bool ind
R12367:12376 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12388:12390 Coq.Init.Logic <> :type_scope:x_'='_x not
R12377:12383 Basics <> beq_nat def
R12387:12387 Tactics <> m var
R12385:12385 Tactics <> n var
R12391:12391 Tactics <> b var
R12363:12365 Coq.Init.Logic <> :type_scope:x_'='_x not
R12344:12350 Basics <> beq_nat def
R12359:12359 Coq.Init.Datatypes <> S constr
R12361:12361 Tactics <> m var
R12353:12353 Coq.Init.Datatypes <> S constr
R12355:12355 Tactics <> n var
R12366:12366 Tactics <> b var
prf 13229:13235 <> silly3'
R13251:13253 Coq.Init.Datatypes <> nat ind
R13259:13259 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13308:13314 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13333:13339 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13344:13346 Coq.Init.Logic <> :type_scope:x_'='_x not
R13340:13343 Basics <> true constr
R13347:13353 Basics <> beq_nat def
R13356:13356 Coq.Init.Datatypes <> S constr
R13359:13359 Coq.Init.Datatypes <> S constr
R13361:13361 Tactics <> n var
R13319:13321 Coq.Init.Logic <> :type_scope:x_'='_x not
R13315:13318 Basics <> true constr
R13322:13328 Basics <> beq_nat def
R13330:13330 Tactics <> n var
R13278:13281 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13301:13303 Coq.Init.Logic <> :type_scope:x_'='_x not
R13282:13288 Basics <> beq_nat def
R13291:13291 Coq.Init.Datatypes <> S constr
R13294:13294 Coq.Init.Datatypes <> S constr
R13296:13296 Tactics <> n var
R13304:13307 Basics <> true constr
R13271:13273 Coq.Init.Logic <> :type_scope:x_'='_x not
R13260:13266 Basics <> beq_nat def
R13268:13268 Tactics <> n var
R13274:13277 Basics <> true constr
prf 14243:14260 <> plus_n_n_injective
R14294:14302 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14304:14306 Coq.Init.Logic <> :type_scope:x_'='_x not
R14303:14303 Tactics <> n var
R14307:14307 Tactics <> m var
R14286:14288 Coq.Init.Logic <> :type_scope:x_'='_x not
R14282:14284 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14281:14281 Tactics <> n var
R14285:14285 Tactics <> n var
R14290:14292 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14289:14289 Tactics <> m var
R14293:14293 Tactics <> m var
prf 15290:15312 <> double_injective_FAILED
R15352:15360 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15362:15364 Coq.Init.Logic <> :type_scope:x_'='_x not
R15361:15361 Tactics <> n var
R15365:15365 Tactics <> m var
R15341:15343 Coq.Init.Logic <> :type_scope:x_'='_x not
R15333:15338 Induction <> double def
R15340:15340 Tactics <> n var
R15344:15349 Induction <> double def
R15351:15351 Tactics <> m var
R15645:15651 Tactics <> f_equal thm
R15645:15651 Tactics <> f_equal thm
prf 17887:17902 <> double_injective
R17942:17950 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17952:17954 Coq.Init.Logic <> :type_scope:x_'='_x not
R17951:17951 Tactics <> n var
R17955:17955 Tactics <> m var
R17931:17933 Coq.Init.Logic <> :type_scope:x_'='_x not
R17923:17928 Induction <> double def
R17930:17930 Tactics <> n var
R17934:17939 Induction <> double def
R17941:17941 Tactics <> m var
R18828:18834 Tactics <> f_equal thm
R18828:18834 Tactics <> f_equal thm
prf 19735:19746 <> beq_nat_true
R19784:19787 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19789:19791 Coq.Init.Logic <> :type_scope:x_'='_x not
R19788:19788 Tactics <> n var
R19792:19792 Tactics <> m var
R19777:19779 Coq.Init.Logic <> :type_scope:x_'='_x not
R19766:19772 Basics <> beq_nat def
R19776:19776 Tactics <> m var
R19774:19774 Tactics <> n var
R19780:19783 Basics <> true constr
prf 20368:20396 <> double_injective_take2_FAILED
R20436:20444 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20446:20448 Coq.Init.Logic <> :type_scope:x_'='_x not
R20445:20445 Tactics <> n var
R20449:20449 Tactics <> m var
R20425:20427 Coq.Init.Logic <> :type_scope:x_'='_x not
R20417:20422 Induction <> double def
R20424:20424 Tactics <> n var
R20428:20433 Induction <> double def
R20435:20435 Tactics <> m var
R20729:20735 Tactics <> f_equal thm
R20729:20735 Tactics <> f_equal thm
prf 21671:21692 <> double_injective_take2
R21732:21740 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21742:21744 Coq.Init.Logic <> :type_scope:x_'='_x not
R21741:21741 Tactics <> n var
R21745:21745 Tactics <> m var
R21721:21723 Coq.Init.Logic <> :type_scope:x_'='_x not
R21713:21718 Induction <> double def
R21720:21720 Tactics <> n var
R21724:21729 Induction <> double def
R21731:21731 Tactics <> m var
R22208:22214 Tactics <> f_equal thm
R22208:22214 Tactics <> f_equal thm
prf 24414:24424 <> beq_id_true
R24459:24462 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24464:24466 Coq.Init.Logic <> :type_scope:x_'='_x not
R24463:24463 Tactics <> x var
R24467:24467 Tactics <> y var
R24452:24454 Coq.Init.Logic <> :type_scope:x_'='_x not
R24442:24447 Lists <> beq_id def
R24451:24451 Tactics <> y var
R24449:24449 Tactics <> x var
R24455:24458 Basics <> true constr
R24528:24530 Coq.Init.Logic <> :type_scope:x_'='_x not
R24528:24530 Coq.Init.Logic <> :type_scope:x_'='_x not
R24543:24554 Tactics <> beq_nat_true prfax
R24543:24554 Tactics <> beq_nat_true prfax
prf 24712:24731 <> nth_error_after_last
R24746:24748 Coq.Init.Datatypes <> nat ind
R24767:24770 Poly <> list ind
R24772:24772 Tactics <> X var
R24793:24801 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24815:24817 Coq.Init.Logic <> :type_scope:x_'='_x not
R24802:24810 Poly <> nth_error def
R24814:24814 Tactics <> n var
R24812:24812 Tactics <> l var
R24818:24821 Poly <> None constr
R24789:24791 Coq.Init.Logic <> :type_scope:x_'='_x not
R24781:24786 Poly <> length def
R24788:24788 Tactics <> l var
R24792:24792 Tactics <> n var
def 25148:25153 <> square
R25161:25163 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25160:25160 Tactics <> n var
R25164:25164 Tactics <> n var
prf 25235:25245 <> square_mult
R25275:25277 Coq.Init.Logic <> :type_scope:x_'='_x not
R25261:25266 Tactics <> square def
R25270:25272 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25269:25269 Tactics <> n var
R25273:25273 Tactics <> m var
R25286:25288 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25278:25283 Tactics <> square def
R25285:25285 Tactics <> n var
R25289:25294 Tactics <> square def
R25296:25296 Tactics <> m var
R25613:25618 Tactics <> square def
R25943:25952 Induction <> mult_assoc prfax
R25943:25952 Induction <> mult_assoc prfax
R25943:25952 Induction <> mult_assoc prfax
R25978:25980 Coq.Init.Logic <> :type_scope:x_'='_x not
R25974:25976 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25970:25972 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25986:25988 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25982:25984 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25978:25980 Coq.Init.Logic <> :type_scope:x_'='_x not
R25974:25976 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25970:25972 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25986:25988 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R25982:25984 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26005:26013 Induction <> mult_comm prfax
R26005:26013 Induction <> mult_comm prfax
R26005:26013 Induction <> mult_comm prfax
R26022:26031 Induction <> mult_assoc prfax
R26022:26031 Induction <> mult_assoc prfax
R26057:26066 Induction <> mult_assoc prfax
R26057:26066 Induction <> mult_assoc prfax
R26057:26066 Induction <> mult_assoc prfax
def 26454:26456 <> foo
R26462:26464 Coq.Init.Datatypes <> nat ind
prf 26677:26688 <> silly_fact_1
R26711:26713 Coq.Init.Logic <> :type_scope:x_'='_x not
R26707:26709 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R26702:26704 Tactics <> foo def
R26706:26706 Tactics <> m var
R26725:26727 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R26714:26716 Tactics <> foo def
R26720:26722 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R26719:26719 Tactics <> m var
def 26958:26960 <> bar
R26975:26975 Tactics <> x var
R26986:26986 Coq.Init.Datatypes <> O constr
R26997:26997 Coq.Init.Datatypes <> S constr
prf 27071:27089 <> silly_fact_2_FAILED
R27112:27114 Coq.Init.Logic <> :type_scope:x_'='_x not
R27108:27110 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27103:27105 Tactics <> bar def
R27107:27107 Tactics <> m var
R27126:27128 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27115:27117 Tactics <> bar def
R27121:27123 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27120:27120 Tactics <> m var
prf 28117:28128 <> silly_fact_2
R28151:28153 Coq.Init.Logic <> :type_scope:x_'='_x not
R28147:28149 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28142:28144 Tactics <> bar def
R28146:28146 Tactics <> m var
R28165:28167 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28154:28156 Tactics <> bar def
R28160:28162 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28159:28159 Tactics <> m var
prf 28515:28527 <> silly_fact_2'
R28550:28552 Coq.Init.Logic <> :type_scope:x_'='_x not
R28546:28548 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28541:28543 Tactics <> bar def
R28545:28545 Tactics <> m var
R28564:28566 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28553:28555 Tactics <> bar def
R28559:28561 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28558:28558 Tactics <> m var
R28598:28600 Tactics <> bar def
def 29244:29251 <> sillyfun
R29258:29260 Coq.Init.Datatypes <> nat ind
R29265:29268 Basics <> bool ind
R29278:29284 Basics <> beq_nat def
R29286:29286 Tactics <> n var
R29311:29317 Basics <> beq_nat def
R29319:29319 Tactics <> n var
R29341:29345 Basics <> false constr
R29328:29332 Basics <> false constr
R29295:29299 Basics <> false constr
prf 29357:29370 <> sillyfun_false
R29386:29388 Coq.Init.Datatypes <> nat ind
R29404:29406 Coq.Init.Logic <> :type_scope:x_'='_x not
R29394:29401 Tactics <> sillyfun def
R29403:29403 Tactics <> n var
R29407:29411 Basics <> false constr
R29440:29447 Tactics <> sillyfun def
R29462:29468 Basics <> beq_nat def
R29462:29468 Basics <> beq_nat def
R29562:29568 Basics <> beq_nat def
R29562:29568 Basics <> beq_nat def
prf 30367:30379 <> combine_split
R30399:30402 Poly <> list ind
R30406:30408 Poly <> :type_scope:x_'*'_x not
R30405:30405 Tactics <> X var
R30409:30409 Tactics <> Y var
R30440:30445 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30459:30461 Coq.Init.Logic <> :type_scope:x_'='_x not
R30446:30452 Poly <> combine def
R30457:30458 Tactics <> l2 var
R30454:30455 Tactics <> l1 var
R30462:30462 Tactics <> l var
R30429:30431 Coq.Init.Logic <> :type_scope:x_'='_x not
R30422:30426 Poly <> split prfax
R30428:30428 Tactics <> l var
R30432:30432 Poly <> ::'('_x_','_x_')' not
R30435:30436 Poly <> ::'('_x_','_x_')' not
R30439:30439 Poly <> ::'('_x_','_x_')' not
R30433:30434 Tactics <> l1 var
R30437:30438 Tactics <> l2 var
def 30766:30774 <> sillyfun1
R30781:30783 Coq.Init.Datatypes <> nat ind
R30788:30791 Basics <> bool ind
R30801:30807 Basics <> beq_nat def
R30809:30809 Tactics <> n var
R30833:30839 Basics <> beq_nat def
R30841:30841 Tactics <> n var
R30862:30866 Basics <> false constr
R30850:30853 Basics <> true constr
R30818:30821 Basics <> true constr
prf 31125:31144 <> sillyfun1_odd_FAILED
R31160:31162 Coq.Init.Datatypes <> nat ind
R31189:31197 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31204:31206 Coq.Init.Logic <> :type_scope:x_'='_x not
R31198:31201 Basics <> oddb def
R31203:31203 Tactics <> n var
R31207:31210 Basics <> true constr
R31182:31184 Coq.Init.Logic <> :type_scope:x_'='_x not
R31171:31179 Tactics <> sillyfun1 def
R31181:31181 Tactics <> n var
R31185:31188 Basics <> true constr
R31242:31250 Tactics <> sillyfun1 def
R31271:31277 Basics <> beq_nat def
R31271:31277 Basics <> beq_nat def
prf 32127:32139 <> sillyfun1_odd
R32155:32157 Coq.Init.Datatypes <> nat ind
R32184:32192 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32199:32201 Coq.Init.Logic <> :type_scope:x_'='_x not
R32193:32196 Basics <> oddb def
R32198:32198 Tactics <> n var
R32202:32205 Basics <> true constr
R32177:32179 Coq.Init.Logic <> :type_scope:x_'='_x not
R32166:32174 Tactics <> sillyfun1 def
R32176:32176 Tactics <> n var
R32180:32183 Basics <> true constr
R32237:32245 Tactics <> sillyfun1 def
R32266:32272 Basics <> beq_nat def
R32266:32272 Basics <> beq_nat def
R32521:32532 Tactics <> beq_nat_true prfax
R32521:32532 Tactics <> beq_nat_true prfax
R32819:32825 Basics <> beq_nat def
R32819:32825 Basics <> beq_nat def
R32885:32896 Tactics <> beq_nat_true prfax
R32885:32896 Tactics <> beq_nat_true prfax
prf 33060:33081 <> bool_fn_applied_thrice
R33103:33106 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33107:33110 Basics <> bool ind
R33099:33102 Basics <> bool ind
R33118:33121 Basics <> bool ind
R33138:33140 Coq.Init.Logic <> :type_scope:x_'='_x not
R33127:33127 Tactics <> f var
R33130:33130 Tactics <> f var
R33133:33133 Tactics <> f var
R33135:33135 Tactics <> b var
R33141:33141 Tactics <> f var
R33143:33143 Tactics <> b var
prf 35454:35464 <> beq_nat_sym
R35482:35484 Coq.Init.Datatypes <> nat ind
R35501:35503 Coq.Init.Logic <> :type_scope:x_'='_x not
R35490:35496 Basics <> beq_nat def
R35500:35500 Tactics <> m var
R35498:35498 Tactics <> n var
R35504:35510 Basics <> beq_nat def
R35514:35514 Tactics <> n var
R35512:35512 Tactics <> m var
prf 35893:35905 <> beq_nat_trans
R35943:35948 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35967:35972 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35984:35986 Coq.Init.Logic <> :type_scope:x_'='_x not
R35973:35979 Basics <> beq_nat def
R35983:35983 Tactics <> p var
R35981:35981 Tactics <> n var
R35987:35990 Basics <> true constr
R35960:35962 Coq.Init.Logic <> :type_scope:x_'='_x not
R35949:35955 Basics <> beq_nat def
R35959:35959 Tactics <> p var
R35957:35957 Tactics <> m var
R35963:35966 Basics <> true constr
R35936:35938 Coq.Init.Logic <> :type_scope:x_'='_x not
R35925:35931 Basics <> beq_nat def
R35935:35935 Tactics <> m var
R35933:35933 Tactics <> n var
R35939:35942 Basics <> true constr
def 36737:36759 <> split_combine_statement
prf 36933:36945 <> split_combine
R36949:36971 Tactics <> split_combine_statement prfax
prf 37190:37204 <> filter_exercise
R37235:37238 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37239:37242 Basics <> bool ind
R37234:37234 Tactics <> X var
R37279:37279 Tactics <> X var
R37290:37293 Poly <> list ind
R37295:37295 Tactics <> X var
R37327:37335 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37342:37344 Coq.Init.Logic <> :type_scope:x_'='_x not
R37336:37339 Tactics <> test var
R37341:37341 Tactics <> x var
R37345:37348 Basics <> true constr
R37317:37319 Coq.Init.Logic <> :type_scope:x_'='_x not
R37304:37309 Poly <> filter def
R37316:37316 Tactics <> l var
R37311:37314 Tactics <> test var
R37321:37324 Poly <> ::x_'::'_x not
R37320:37320 Tactics <> x var
R37325:37326 Tactics <> lf var
